# Generated by Django 5.1.4 on 2025-06-20 02:25

import datetime

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Clientes",
            fields=[
                ("id_cliente", models.AutoField(primary_key=True, serialize=False)),
                ("nombre_cliente", models.CharField(max_length=255)),
                ("tipo_cliente", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "clientes",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("username", models.CharField(max_length=150, unique=True)),
                ("name", models.CharField(blank=True, max_length=150, null=True)),
                ("password", models.CharField(max_length=128)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_admin",
                    models.BooleanField(
                        db_column="is_admin",
                        default=False,
                        help_text="Indica si este usuario tiene permisos de administrador (staff).",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Puede acceder al sitio de administración.",
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Para permisos totales, ignorando restricciones de grupos.",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Fecha en que se creó esta cuenta.",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Usuario",
                "verbose_name_plural": "Usuarios",
                "db_table": "accounts_user",
            },
        ),
        migrations.CreateModel(
            name="ArtistasUnicos",
            fields=[
                (
                    "id_artista_unico",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("nombre_artista", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "artistas_unicos",
                "unique_together": {("nombre_artista",)},
            },
        ),
        migrations.CreateModel(
            name="AutoresUnicos",
            fields=[
                ("id_autor", models.AutoField(primary_key=True, serialize=False)),
                ("nombre_autor", models.CharField(max_length=255)),
                ("codigo_ipi", models.CharField(blank=True, max_length=100, null=True)),
                ("tipo_autor", models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                "db_table": "autoresunicos",
                "unique_together": {("nombre_autor", "codigo_ipi", "tipo_autor")},
            },
        ),
        migrations.CreateModel(
            name="ClienteEmails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=255)),
                (
                    "cliente",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="emails",
                        to="accounts.clientes",
                    ),
                ),
            ],
            options={
                "db_table": "cliente_emails",
            },
        ),
        migrations.CreateModel(
            name="Catalogos",
            fields=[
                ("id_catalogo", models.AutoField(primary_key=True, serialize=False)),
                ("fecha_recibido", models.DateField()),
                ("estado", models.CharField(max_length=10)),
                (
                    "cliente",
                    models.ForeignKey(
                        db_column="id_cliente",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.clientes",
                    ),
                ),
            ],
            options={
                "db_table": "catalogos",
            },
        ),
        migrations.CreateModel(
            name="Obras",
            fields=[
                ("cod_klaim", models.AutoField(primary_key=True, serialize=False)),
                ("titulo", models.CharField(max_length=255)),
                ("codigo_sgs", models.CharField(max_length=100)),
                (
                    "codigo_iswc",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "catalogo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.catalogos",
                    ),
                ),
            ],
            options={
                "db_table": "obras",
            },
        ),
        migrations.CreateModel(
            name="MovimientoUsuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo_movimiento", models.CharField(max_length=50)),
                ("fecha_hora", models.DateTimeField(auto_now_add=True)),
                (
                    "usuario",
                    models.ForeignKey(
                        db_column="usuario_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "obra",
                    models.ForeignKey(
                        db_column="obra_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.obras",
                    ),
                ),
            ],
            options={
                "db_table": "movimientos_usuario",
            },
        ),
        migrations.CreateModel(
            name="ConflictosPlataforma",
            fields=[
                ("id_conflicto", models.AutoField(primary_key=True, serialize=False)),
                ("nombre_contraparte", models.CharField(max_length=255, null=True)),
                (
                    "porcentaje_contraparte",
                    models.DecimalField(decimal_places=2, max_digits=5, null=True),
                ),
                ("informacion_adicional", models.TextField(blank=True, null=True)),
                ("fecha_conflicto", models.DateField(auto_now_add=True)),
                (
                    "plataforma",
                    models.CharField(
                        choices=[("MLC", "MLC"), ("ADREV", "ADREV")], max_length=50
                    ),
                ),
                (
                    "estado_conflicto",
                    models.CharField(
                        choices=[("vigente", "vigente"), ("finalizado", "finalizado")],
                        default=None,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "obra",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conflictos",
                        to="accounts.obras",
                    ),
                ),
            ],
            options={
                "db_table": "conflictos_plataforma",
            },
        ),
        migrations.CreateModel(
            name="CodigosISRC",
            fields=[
                ("id_isrc", models.AutoField(primary_key=True, serialize=False)),
                ("codigo_isrc", models.CharField(max_length=100)),
                (
                    "name_artista_alternativo",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "titulo_alternativo",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("matching_tool_isrc", models.BooleanField(default=False)),
                ("rating", models.FloatField(blank=True, null=True)),
                (
                    "id_artista_unico",
                    models.ForeignKey(
                        blank=True,
                        db_column="id_artista_unico",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.artistasunicos",
                    ),
                ),
                (
                    "obra",
                    models.ForeignKey(
                        db_column="obra_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="codigos_isrc",
                        to="accounts.obras",
                    ),
                ),
            ],
            options={
                "db_table": "codigos_isrc",
            },
        ),
        migrations.CreateModel(
            name="AudiosISRC",
            fields=[
                ("id_audio", models.AutoField(primary_key=True, serialize=False)),
                ("link_utilizado", models.URLField(max_length=255)),
                (
                    "fuente",
                    models.CharField(
                        choices=[("Spotify", "Spotify"), ("Deezer", "Deezer")],
                        max_length=10,
                    ),
                ),
                ("exito_descarga", models.BooleanField()),
                (
                    "nombre_archivo",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("mensaje_error", models.TextField(blank=True, null=True)),
                (
                    "activo",
                    models.BooleanField(
                        default=True,
                        help_text="Marca si este audio sigue pendiente (True) o fue omitido (False).",
                    ),
                ),
                (
                    "id_isrc",
                    models.ForeignKey(
                        db_column="id_isrc",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="audios",
                        to="accounts.codigosisrc",
                    ),
                ),
                (
                    "obra",
                    models.ForeignKey(
                        db_column="obra_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="audios_isrc",
                        to="accounts.obras",
                    ),
                ),
            ],
            options={
                "verbose_name": "Audio descargado",
                "verbose_name_plural": "Audios descargados",
                "db_table": "audios_isrc",
                "ordering": ["-id_audio"],
            },
        ),
        migrations.CreateModel(
            name="Artistas",
            fields=[
                ("id_artista", models.AutoField(primary_key=True, serialize=False)),
                ("nombre_artista", models.CharField(max_length=255)),
                (
                    "artista_unico",
                    models.ForeignKey(
                        db_column="id_artista_unico",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.artistasunicos",
                    ),
                ),
                (
                    "obra",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="accounts.obras"
                    ),
                ),
            ],
            options={
                "db_table": "artistas",
            },
        ),
        migrations.CreateModel(
            name="ObrasAutores",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "porcentaje_autor",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                (
                    "autor",
                    models.ForeignKey(
                        db_column="autor_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.autoresunicos",
                    ),
                ),
                (
                    "obra",
                    models.ForeignKey(
                        db_column="obra_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.obras",
                    ),
                ),
            ],
            options={
                "db_table": "obrasautores",
            },
        ),
        migrations.CreateModel(
            name="ObrasLiberadas",
            fields=[
                ("id_liberada", models.AutoField(primary_key=True, serialize=False)),
                ("titulo", models.CharField(max_length=255)),
                ("codigo_sgs", models.CharField(max_length=100)),
                (
                    "codigo_iswc",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("nombre_autor", models.CharField(max_length=255)),
                (
                    "porcentaje_autor",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                ("fecha_creacion", models.DateField(default=datetime.date.today)),
                (
                    "estado_liberacion",
                    models.CharField(
                        choices=[("vigente", "vigente"), ("finalizado", "finalizado")],
                        default="vigente",
                        max_length=10,
                    ),
                ),
                (
                    "cod_klaim",
                    models.ForeignKey(
                        db_column="cod_klaim",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.obras",
                    ),
                ),
                (
                    "id_cliente",
                    models.ForeignKey(
                        db_column="id_cliente",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.clientes",
                    ),
                ),
            ],
            options={
                "db_table": "obras_liberadas",
            },
        ),
        migrations.CreateModel(
            name="SubidasPlataforma",
            fields=[
                ("id_subida", models.AutoField(primary_key=True, serialize=False)),
                (
                    "codigo_MLC",
                    models.CharField(
                        blank=True, db_index=True, max_length=100, null=True
                    ),
                ),
                (
                    "codigo_ADREV",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "estado_MLC",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("OK", "OK"),
                            ("Conflicto", "Conflicto"),
                            ("NO CARGADA", "NO CARGADA"),
                            ("LIBERADA", "LIBERADA"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "estado_ADREV",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("OK", "OK"),
                            ("Conflicto", "Conflicto"),
                            ("NO CARGADA", "NO CARGADA"),
                            ("LIBERADA", "LIBERADA"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("fecha_subida", models.DateField()),
                ("matching_tool", models.BooleanField(default=False)),
                (
                    "obra",
                    models.ForeignKey(
                        db_column="obra_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.obras",
                    ),
                ),
            ],
            options={
                "db_table": "subidas_plataforma",
            },
        ),
        migrations.CreateModel(
            name="MatchingToolTituloAutor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("usos", models.PositiveSmallIntegerField()),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("Enviado", "Enviado"),
                            ("Aceptada", "Aceptada"),
                            ("Rechazada", "Rechazada"),
                        ],
                        default="Enviado",
                        max_length=10,
                    ),
                ),
                (
                    "artista",
                    models.ForeignKey(
                        blank=True,
                        db_column="artista_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.artistasunicos",
                    ),
                ),
                (
                    "autor",
                    models.ForeignKey(
                        db_column="autor_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.autoresunicos",
                    ),
                ),
                (
                    "obra",
                    models.ForeignKey(
                        db_column="obra_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.obras",
                    ),
                ),
                (
                    "codigo_mlc",
                    models.ForeignKey(
                        db_column="codigo_mlc_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.subidasplataforma",
                    ),
                ),
            ],
            options={
                "db_table": "matching_tool_titulo_autor",
            },
        ),
        migrations.CreateModel(
            name="MatchingToolISRC",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("usos", models.PositiveSmallIntegerField()),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("Enviado", "Enviado"),
                            ("Aceptada", "Aceptada"),
                            ("Rechazada", "Rechazada"),
                        ],
                        default="Enviado",
                        max_length=10,
                    ),
                ),
                (
                    "id_isrc",
                    models.ForeignKey(
                        db_column="id_isrc",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.codigosisrc",
                    ),
                ),
                (
                    "obra",
                    models.ForeignKey(
                        db_column="obra_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.obras",
                    ),
                ),
                (
                    "codigo_mlc",
                    models.ForeignKey(
                        db_column="codigo_mlc_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.subidasplataforma",
                    ),
                ),
            ],
            options={
                "db_table": "matching_tool_isrc",
            },
        ),
        migrations.CreateModel(
            name="LyricfindRegistro",
            fields=[
                (
                    "id_lyricfind",
                    models.AutoField(
                        db_column="id_lyricfind", primary_key=True, serialize=False
                    ),
                ),
                ("lyric_text", models.TextField()),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("Pendiente", "Pendiente"),
                            ("Procesado", "Procesado"),
                            ("Error", "Error"),
                        ],
                        default="Pendiente",
                        max_length=10,
                    ),
                ),
                ("motivo_error", models.TextField(blank=True, null=True)),
                (
                    "fecha_proceso",
                    models.DateTimeField(auto_now_add=True, db_column="fecha_proceso"),
                ),
                (
                    "fecha_actualizacion",
                    models.DateTimeField(
                        auto_now=True, db_column="fecha_actualizacion"
                    ),
                ),
                (
                    "artista_unico",
                    models.ForeignKey(
                        db_column="id_artista_unico",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lyricfind_registros",
                        to="accounts.artistasunicos",
                    ),
                ),
                (
                    "isrc",
                    models.ForeignKey(
                        db_column="id_isrc",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lyricfind_registros",
                        to="accounts.codigosisrc",
                    ),
                ),
                (
                    "obra",
                    models.ForeignKey(
                        db_column="obra_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lyricfind_registros",
                        to="accounts.obras",
                    ),
                ),
            ],
            options={
                "verbose_name": "Registro LyricFind",
                "verbose_name_plural": "Registros LyricFind",
                "db_table": "lyricfind_registros",
                "managed": True,
                "unique_together": {("obra", "isrc", "artista_unico")},
            },
        ),
        migrations.CreateModel(
            name="IsrcLinksAudios",
            fields=[
                (
                    "id_isrc_link",
                    models.AutoField(
                        db_column="id_isrc_link", primary_key=True, serialize=False
                    ),
                ),
                ("codigo_isrc", models.CharField(max_length=100)),
                (
                    "spotify_link",
                    models.URLField(blank=True, max_length=255, null=True),
                ),
                ("deezer_link", models.URLField(blank=True, max_length=255, null=True)),
                ("activo", models.BooleanField(default=True)),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
                (
                    "id_isrc",
                    models.ForeignKey(
                        db_column="id_isrc",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="links_audio",
                        to="accounts.codigosisrc",
                    ),
                ),
                (
                    "obra",
                    models.ForeignKey(
                        db_column="obra_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="links_audio",
                        to="accounts.obras",
                    ),
                ),
            ],
            options={
                "verbose_name": "Link de Audio (ISRC)",
                "verbose_name_plural": "Links de Audio (ISRC)",
                "db_table": "isrc_links_audios",
                "managed": True,
                "unique_together": {("id_isrc",)},
            },
        ),
    ]
